Object subclass: #Eleccion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Eleccion methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 03:53'!asString	^ self class name.! !!Eleccion methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/30/2014 16:51'!eleccionSuperadora	^  (Eleccion todas select: [ :eleccion | eleccion ganaContra: self ]) anyOne.! !!Eleccion methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/13/2014 23:41'!hash	^ self asString .! !!Eleccion methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/30/2014 16:36'!= otraEleccion	^ self class = otraEleccion class.! !!Eleccion methodsFor: 'double dispatch' stamp: 'jgarrone 11/30/2014 17:45'!ganadorContraLagarto		^ self subclassResponsibility.! !!Eleccion methodsFor: 'double dispatch' stamp: 'JuanEdi 11/8/2014 04:26'!ganadorContraPapel		^ self subclassResponsibility.! !!Eleccion methodsFor: 'double dispatch' stamp: 'JuanEdi 11/8/2014 04:26'!ganadorContraPiedra		^ self subclassResponsibility.! !!Eleccion methodsFor: 'double dispatch' stamp: 'JuanEdi 11/8/2014 04:24'!ganadorContra: otraEleccion	^ self subclassResponsibility.! !!Eleccion methodsFor: 'double dispatch' stamp: 'JuanEdi 11/8/2014 04:26'!ganadorContraTijera		^ self subclassResponsibility.! !!Eleccion methodsFor: 'double dispatch' stamp: 'jgarrone 11/30/2014 17:45'!ganadorContraSpock		^ self subclassResponsibility.! !!Eleccion methodsFor: 'consulta de resultados' stamp: 'JuanEdi 11/8/2014 01:03'!empataContra: otraEleccion	^ (self ganadorContra: otraEleccion) isNil.! !!Eleccion methodsFor: 'consulta de resultados' stamp: 'JuanEdi 11/8/2014 00:27'!noEmpataContra: otraEleccion	^ (self empataContra: otraEleccion) not.! !!Eleccion methodsFor: 'consulta de resultados' stamp: 'JuanEdi 11/8/2014 01:04'!ganaContra: otraEleccion	^ (self noEmpataContra: otraEleccion)	 	and:		[ (self ganadorContra: otraEleccion) = self ]! !!Eleccion methodsFor: 'consulta de resultados' stamp: 'JuanEdi 11/8/2014 00:29'!pierdeContra: otraEleccion	^ (self noEmpataContra: otraEleccion)		and:		[ (self ganaContra: otraEleccion) not ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Eleccion class	instanceVariableNames: ''!!Eleccion class methodsFor: 'as yet unclassified' stamp: 'Marlanbar 11/14/2014 20:50'!spock	^ Spock new.! !!Eleccion class methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/13/2014 23:39'!piedra		^ Piedra new.! !!Eleccion class methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/13/2014 23:05'!papel		^ Papel new.! !!Eleccion class methodsFor: 'as yet unclassified' stamp: 'Marlanbar 11/14/2014 20:55'!lagarto	^ Lagarto new .! !!Eleccion class methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/13/2014 23:39'!tijera		^ Tijera new.! !!Eleccion class methodsFor: 'as yet unclassified' stamp: 'Marlanbar 11/15/2014 15:03'!todas	|aCollection|	aCollection := OrderedCollection new .	Eleccion  subclassesDo: [ :x | aCollection add: x new ] .	^ aCollection .	 ! !Object subclass: #GeneradorRandomParaTest	instanceVariableNames: 'siguiente random'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!GeneradorRandomParaTest methodsFor: 'as yet unclassified' stamp: 'marlanbar 12/16/2014 10:27'!siguiente: unNumeroAleatorio	random := Random seed: unNumeroAleatorio.	siguiente := unNumeroAleatorio.! !!GeneradorRandomParaTest methodsFor: 'as yet unclassified' stamp: 'marlanbar 12/16/2014 10:18'!nextInt: anInteger 		^ siguiente .! !Object subclass: #Jugador	instanceVariableNames: 'eleccionEmpatadora otroEmpatador otraEleccionEmpatadora eleccionGanadora perdedor otraEleccionPerdedora eleccionPerdedora ganador jugo empatador'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Jugador methodsFor: 'as yet unclassified' stamp: 'marlanbar 12/16/2014 10:25'!empatoEligiendo: miEleccion contra: otroJugador eligiendo: eleccionContraria 	! !!Jugador methodsFor: 'as yet unclassified' stamp: 'marlanbar 12/16/2014 10:14'!perdioEligiendo: miEleccion contra: otroJugador eligiendo: eleccionContraria 	! !!Jugador methodsFor: 'as yet unclassified' stamp: 'marlanbar 12/16/2014 10:14'!ganoEligiendo: miEleccion contra: otroJugador eligiendo: eleccionContraria ! !!Jugador methodsFor: 'as yet unclassified' stamp: 'MartinLangberg 11/14/2014 17:59'!eleccion	self subclassResponsibility.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Jugador class	instanceVariableNames: ''!!Jugador class methodsFor: 'as yet unclassified' stamp: 'MartinLangberg 11/14/2014 18:57'!siempre: unaEleccion 	^ JugadorSiempre siempre: unaEleccion .	! !!Jugador class methodsFor: 'as yet unclassified' stamp: 'MartinLangberg 11/14/2014 19:39'!adaptativoIniciandoCon: unaEleccion	^ JugadorAdaptativo comenzandoCon: unaEleccion .! !!Jugador class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 05:52'!aleatorio	^ self shouldBeImplemented.! !!Jugador class methodsFor: 'as yet unclassified' stamp: 'Marlanbar 11/15/2014 15:04'!aleatorioConGenerador: aGeneradorRandomParaTest 	^ JugadorAleatorio conGenerador:aGeneradorRandomParaTest .! !!Jugador class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 05:52'!conHistoriaHasta: cantidadDeResultadosAGuardar	^ self shouldBeImplemented.! !!Jugador class methodsFor: 'as yet unclassified' stamp: 'Marlanbar 11/16/2014 22:31'!humano	^ JugadorHumano new.! !Jugador subclass: #JugadorHumano	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!JugadorHumano methodsFor: 'as yet unclassified' stamp: 'Marlanbar 11/16/2014 16:37'!perdioEligiendo: miEleccion contra: otroJugador eligiendo: eleccionContraria 	^ UITheme current	messageIn: Morph new 	text: 'Perdiste contra' , (eleccionContraria  asString)	title: 'Resultado' . ! !!JugadorHumano methodsFor: 'as yet unclassified' stamp: 'Marlanbar 11/16/2014 16:28'!empatoEligiendo: miEleccion contra: otroJugador eligiendo: eleccionContraria 	^UITheme current	messageIn: Morph new 	text: 'Empataste'  	title: 'Resultado' . ! !!JugadorHumano methodsFor: 'as yet unclassified' stamp: 'Marlanbar 11/16/2014 16:37'!ganoEligiendo: miEleccion contra: otroJugador eligiendo: eleccionContraria 	^ UITheme current	messageIn: Morph new 	text: 'Le ganaste a', (eleccionContraria asString)	title: 'Resultado' . ! !!JugadorHumano methodsFor: 'as yet unclassified' stamp: 'Marlanbar 11/16/2014 16:11'!eleccion	^ UITheme current			chooseDropListIn: Morph new		text: '¿Que jugamos?'		title: 'Nueva eleccion'		list: Eleccion todas! !Jugador subclass: #JugadorSiempre	instanceVariableNames: 'laEleccion'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!JugadorSiempre methodsFor: 'as yet unclassified' stamp: 'MartinLangberg 11/14/2014 18:59'!elegirSiempre: unaEleccion	laEleccion := unaEleccion ! !!JugadorSiempre methodsFor: 'as yet unclassified' stamp: 'MartinLangberg 11/14/2014 19:02'!eleccion	 ^ laEleccion .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!JugadorSiempre class	instanceVariableNames: ''!!JugadorSiempre class methodsFor: 'as yet unclassified' stamp: 'MartinLangberg 11/14/2014 19:01'!siempre: unaEleccion		^ self new		elegirSiempre: unaEleccion .		! !Object subclass: #Juego	instanceVariableNames: 'jugador1 jugador2 resultado eleccion1 eleccion2'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Juego methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 00:57'!jugador1: unJugador jugador2: otroJugador 		jugador1 := unJugador.	jugador2 := otroJugador.! !!Juego methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 02:28'!revancha	^ self iniciar.! !!Juego methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:53'!iniciar		eleccion1 := jugador1 eleccion.	eleccion2 := jugador2 eleccion.		resultado := Resultado jugador1: jugador1 conEleccion: eleccion1				 			jugador2: jugador2 conEleccion: eleccion2.								resultado notificarAJugadores.! !!Juego methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:27'!resultado		resultado isNil ifTrue: [ self iniciar ].		^ resultado.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Juego class	instanceVariableNames: ''!!Juego class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 04:15'!mejorDe: cantidadDeJuegos entre: unJugador y: otroJugador	| j |		j := Juego entre: unJugador y: otroJugador.	cantidadDeJuegos timesRepeat: [ j iniciar ].! !!Juego class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 04:15'!mejorDe: cantidadDeJuegos contra: unJugador	Juego mejorDe: cantidadDeJuegos entre: Jugador humano y: unJugador.! !!Juego class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 00:56'!entre: unJugador y: otroJugador 		^ self new jugador1: unJugador jugador2: otroJugador;			yourself.! !Jugador subclass: #JugadorAleatorio	instanceVariableNames: 'generador'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!JugadorAleatorio methodsFor: 'as yet unclassified' stamp: 'Marlanbar 11/15/2014 15:06'!generador: aGeneradorAleatorio	generador := aGeneradorAleatorio .! !!JugadorAleatorio methodsFor: 'as yet unclassified' stamp: 'marlanbar 12/16/2014 10:03'!eleccion	^Eleccion todas at: (generador nextInt: Eleccion subclasses size).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!JugadorAleatorio class	instanceVariableNames: ''!!JugadorAleatorio class methodsFor: 'as yet unclassified' stamp: 'Marlanbar 11/15/2014 15:07'!conGenerador: aGeneradorRandomParaTest 	^ self new		generador: aGeneradorRandomParaTest .! !Eleccion subclass: #Lagarto	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Lagarto methodsFor: 'double dispatch' stamp: 'jgarrone 11/30/2014 17:38'!ganadorContraPiedra	^ Piedra new .! !!Lagarto methodsFor: 'as yet unclassified' stamp: 'Marlanbar 11/14/2014 20:57'!ganadorContraLagarto	^ nil .! !!Lagarto methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/30/2014 17:37'!ganadorContraPapel	^ self .! !!Lagarto methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/30/2014 17:36'!ganadorContraTijera	^ Tijera new .! !!Lagarto methodsFor: 'as yet unclassified' stamp: 'Marlanbar 11/14/2014 20:56'!ganadorContra: otraEleccion	^ otraEleccion ganadorContraLagarto .! !!Lagarto methodsFor: 'as yet unclassified' stamp: 'Marlanbar 11/14/2014 20:59'!ganadorContraSpock	^ self .! !Jugador subclass: #JugadorAdaptativo	instanceVariableNames: 'primeraEleccion ultimaPartida ultimaEleccion'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!JugadorAdaptativo methodsFor: 'as yet unclassified' stamp: 'MartinLangberg 11/14/2014 19:47'!primeraEleccion: unaEleccion	ultimaEleccion := unaEleccion .	jugo := false .! !!JugadorAdaptativo methodsFor: 'as yet unclassified' stamp: 'marlanbar 12/16/2014 10:11'!perdioEligiendo: miEleccion contra: otroJugador eligiendo: eleccionContraria 		eleccionGanadora := eleccionContraria .	ganador := otroJugador .	perdedor := self .	eleccionPerdedora := miEleccion .	jugo := true .! !!JugadorAdaptativo methodsFor: 'as yet unclassified' stamp: 'MartinLangberg 11/14/2014 20:04'!eleccion	"Elige opcion superadora si perdio la ultima vez, sino continua con opcion por defecto"		( jugo and: (perdedor == self or: empatador == self ) ) ifTrue: [ ultimaEleccion := (eleccionGanadora eleccionSuperadora) . ^ ultimaEleccion  ] .	^ ultimaEleccion			! !!JugadorAdaptativo methodsFor: 'as yet unclassified' stamp: 'marlanbar 12/16/2014 10:16'!empatoEligiendo: miEleccion contra: otroJugador eligiendo: eleccionContraria 		eleccionGanadora := miEleccion .	empatador := self .	otroEmpatador := otroJugador .	otraEleccionEmpatadora := eleccionContraria .	jugo := true .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!JugadorAdaptativo class	instanceVariableNames: ''!!JugadorAdaptativo class methodsFor: 'as yet unclassified' stamp: 'MartinLangberg 11/14/2014 19:04'!comenzandoCon: unaEleccion	^ self new		primeraEleccion: unaEleccion ! !TestCase subclass: #TP3Tests	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!TP3Tests methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 04:51'!test03SePuedeObtenerUnaOpcionSuperadoraParaCualquierEleccion	Eleccion todas allSatisfy: [ :eleccion |		eleccion eleccionSuperadora ganaContra: eleccion.	]! !!TP3Tests methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 18:34'!test08UnJugadorAleatorioUtilizaElGeneradorParaDecidirSuEleccion	"Acá se construye el generador para poder testear. Por conveniencia sería recomendable que la forma por defecto de construir el jugador aleatorio utilice un generador real.	http://xkcd.com/221/"	| jugador generador |	generador := GeneradorRandomParaTest new.	jugador := Jugador aleatorioConGenerador: generador.		generador siguiente: (Eleccion todas indexOf: Eleccion piedra).	self assert: jugador eleccion = Eleccion piedra.		generador siguiente: (Eleccion todas indexOf: Eleccion spock).	self assert: jugador eleccion = Eleccion spock.! !!TP3Tests methodsFor: 'as yet unclassified' stamp: 'MartinLangberg 11/14/2014 19:47'!test05UnJugadorAdaptativoCambiaSuEleccionCuandoPierde	| jugador contrincante |		jugador := Jugador adaptativoIniciandoCon: Eleccion piedra.	contrincante := Jugador siempre: Eleccion papel.	self assert: jugador eleccion = Eleccion piedra.	(Juego entre: jugador y: contrincante) iniciar.		self assert: (jugador eleccion ganaContra: contrincante eleccion).! !!TP3Tests methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 18:35'!test07ElJuegoSeAdaptaANuevasReglas	"https://www.youtube.com/watch?v=_PUEoDYpUyQ"	self assert: (Eleccion piedra pierdeContra: Eleccion spock).	self assert: (Eleccion papel ganaContra: Eleccion spock).	self assert: (Eleccion lagarto empataContra: Eleccion lagarto).	self assert: (Eleccion spock pierdeContra: Eleccion lagarto).! !!TP3Tests methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 18:36'!test02SeCumplenLasReglasDelJuego" Implementar los distintos ganaContraX para lograr la funcionalidad pedida"	self assert: (Eleccion piedra ganaContra: Eleccion tijera).	self assert: (Eleccion piedra pierdeContra: Eleccion papel).	self assert: (Eleccion piedra empataContra: Eleccion piedra).	self assert: (Eleccion papel ganaContra: Eleccion piedra).	self assert: (Eleccion papel pierdeContra: Eleccion tijera).	self assert: (Eleccion papel empataContra: Eleccion papel).		self assert: (Eleccion tijera ganaContra: Eleccion papel).	self assert: (Eleccion tijera pierdeContra: Eleccion piedra).	self assert: (Eleccion tijera empataContra: Eleccion tijera).! !!TP3Tests methodsFor: 'as yet unclassified' stamp: 'MartinLangberg 11/14/2014 20:05'!test06UnJugadorAdaptativoCambiaSuEleccionCuandoEmpata	| jugador contrincante |		jugador := Jugador adaptativoIniciandoCon: Eleccion piedra.	contrincante := Jugador siempre: Eleccion piedra.	self assert: jugador eleccion = Eleccion piedra.	(Juego entre: jugador y: contrincante) iniciar.	self assert: (jugador eleccion ganaContra: contrincante eleccion).! !!TP3Tests methodsFor: 'as yet unclassified' stamp: 'LeoMartinyJavi 12/15/2014 18:28'!test09SePuedeJugarA3RondasEntreUnJugadoryOtro	| unJugador otroJugador |	unJugador := Jugador siempre: Eleccion piedra.	otroJugador := Jugador adaptativoIniciandoCon: Eleccion tijera .		Juego mejorDe: 3 entre: unJugador y: otroJugador .! !!TP3Tests methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 05:04'!test04UnJuegoConsisteEnHacerCompetirLaEleccionDeDosJugadores	| jugadorPiedra jugadorPapel |		"https://www.youtube.com/watch?feature=player_detailpage&v=dwj254ofJbk#t=14"	jugadorPiedra := Jugador siempre: Eleccion piedra.	jugadorPapel := Jugador siempre: Eleccion papel.	self assert: (Juego entre: jugadorPiedra y: jugadorPapel) resultado ganador = jugadorPapel.	self assert: (Juego entre: jugadorPiedra y: jugadorPiedra) resultado esEmpate.! !!TP3Tests methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/13/2014 23:37'!test01LaIgualdadYElHashDeEleccionNoDistingueInstanciasDelMismoTipo	self assert: Eleccion piedra = Eleccion piedra.	self assert: Eleccion papel = Eleccion papel.	self assert: Eleccion tijera = Eleccion tijera.		self assert: Eleccion piedra hash = Eleccion piedra hash.	self assert: Eleccion papel hash= Eleccion papel hash.	self assert: Eleccion tijera hash= Eleccion tijera hash.! !Eleccion subclass: #Piedra	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Piedra methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/30/2014 17:33'!ganadorContraLagarto		^ self .! !!Piedra methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/14/2014 00:27'!ganadorContraPapel		^ Papel new .! !!Piedra methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/14/2014 00:22'!ganadorContraPiedra		^ nil .! !!Piedra methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/14/2014 00:08'!ganadorContra: otraEleccion	^ otraEleccion ganadorContraPiedra .! !!Piedra methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/14/2014 00:32'!ganadorContraTijera		^ self .! !!Piedra methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/30/2014 17:33'!ganadorContraSpock		^ Spock new .! !Object subclass: #Resultado	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Resultado methodsFor: 'as yet unclassified' stamp: 'MartinLangberg 11/14/2014 18:40'!notificarAJugadores	^ self subclassResponsibility ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Resultado class	instanceVariableNames: ''!!Resultado class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:38'!jugador1: unJugador conEleccion: unaEleccion jugador2: otroJugador conEleccion: otraEleccion 		(unaEleccion empataContra: otraEleccion) ifTrue: [		^ Empate entre: unJugador eligiendo: unaEleccion y: otroJugador eligiendo: otraEleccion.	].		^ (unaEleccion ganaContra: otraEleccion)	ifTrue: [ Victoria de: unJugador eligiendo: unaEleccion contra: otroJugador eligiendo: otraEleccion ]	ifFalse: [ Victoria de: otroJugador eligiendo: otraEleccion contra: unJugador eligiendo: unaEleccion ].! !Resultado subclass: #Victoria	instanceVariableNames: 'ganador eleccionGanadora perdedor eleccionPerdedora'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Victoria methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:42'!esEmpate		^ false.! !!Victoria methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:41'!ganador: unJugador eleccionGanadora: unaEleccion perdedor: otroJugador eligiendo: otraEleccion 		ganador := unJugador.	eleccionGanadora := unaEleccion.	perdedor := otroJugador.	eleccionPerdedora := otraEleccion.! !!Victoria methodsFor: 'as yet unclassified' stamp: 'marlanbar 12/16/2014 10:13'!notificarAJugadores	ganador ganoEligiendo: eleccionGanadora  contra: perdedor  eligiendo: eleccionPerdedora.	perdedor perdioEligiendo: eleccionPerdedora  contra: ganador eligiendo: eleccionGanadora.	^ ganador .! !!Victoria methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:45'!ganador	^ ganador! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Victoria class	instanceVariableNames: ''!!Victoria class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:40'!de: unJugador eligiendo: unaEleccion contra: otroJugador eligiendo: otraEleccion 		^ self new 		ganador: unJugador		eleccionGanadora: unaEleccion		perdedor: otroJugador		eligiendo: otraEleccion;		yourself.! !Resultado subclass: #Empate	instanceVariableNames: 'jugador1 eleccion1 jugador2 eleccion2'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Empate methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:48'!jugador1: unJugador eleccion1: unaEleccion jugador2: otroJugador eleccion2: otraEleccion 		jugador1 := unJugador.	eleccion1 := unaEleccion.	jugador2 := otroJugador.	eleccion2 := otraEleccion.! !!Empate methodsFor: 'as yet unclassified' stamp: 'Marlanbar 11/15/2014 16:02'!esEmpate	^ true .! !!Empate methodsFor: 'as yet unclassified' stamp: 'marlanbar 12/16/2014 10:13'!notificarAJugadores	jugador1 empatoEligiendo: eleccion1 contra: jugador2  eligiendo: eleccion1.	jugador2 empatoEligiendo: eleccion2 contra: jugador1 eligiendo: eleccion2.	^ self esEmpate.! !!Empate methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 02:55'!ganador	^ nil.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Empate class	instanceVariableNames: ''!!Empate class methodsFor: 'as yet unclassified' stamp: 'JuanEdi 11/8/2014 01:47'!entre: unJugador eligiendo: unaEleccion y: otroJugador eligiendo: otraEleccion 		^ self new		jugador1: unJugador		eleccion1: unaEleccion		jugador2: otroJugador		eleccion2: otraEleccion;		yourself.! !Eleccion subclass: #Spock	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Spock methodsFor: 'double dispatch' stamp: 'Marlanbar 11/14/2014 20:53'!ganadorContraPapel	^ Papel new .! !!Spock methodsFor: 'double dispatch' stamp: 'Marlanbar 11/14/2014 20:51'!ganadorContraPiedra	^ self .! !!Spock methodsFor: 'double dispatch' stamp: 'Marlanbar 11/14/2014 20:58'!ganadorContra: otraEleccion	^ otraEleccion ganadorContraSpock .! !!Spock methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/30/2014 17:36'!ganadorContraLagarto	^ Lagarto new .! !!Spock methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/30/2014 17:36'!ganadorContraTijera	^ self .! !!Spock methodsFor: 'as yet unclassified' stamp: 'Marlanbar 11/14/2014 21:07'!ganadorContraSpock	^ nil .! !Eleccion subclass: #Papel	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Papel methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/30/2014 17:34'!ganadorContraLagarto		^ Lagarto new .! !!Papel methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/14/2014 00:21'!ganadorContraPapel		^ nil .! !!Papel methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/14/2014 00:27'!ganadorContraPiedra		^ self .! !!Papel methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/14/2014 00:07'!ganadorContra: otraEleccion	^ otraEleccion ganadorContraPapel .! !!Papel methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/14/2014 00:27'!ganadorContraTijera		^ Tijera new .! !!Papel methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/30/2014 17:34'!ganadorContraSpock		^ self .! !Eleccion subclass: #Tijera	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP3'!!Tijera methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/30/2014 17:35'!ganadorContraLagarto		^ self .! !!Tijera methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/14/2014 00:28'!ganadorContraPapel		^ self .! !!Tijera methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/14/2014 00:28'!ganadorContraPiedra		^ Piedra new .! !!Tijera methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/14/2014 00:08'!ganadorContra: otraEleccion	^ otraEleccion ganadorContraTijera .! !!Tijera methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/14/2014 00:22'!ganadorContraTijera		^ nil .! !!Tijera methodsFor: 'as yet unclassified' stamp: 'jgarrone 11/30/2014 17:36'!ganadorContraSpock		^ Spock new .! !